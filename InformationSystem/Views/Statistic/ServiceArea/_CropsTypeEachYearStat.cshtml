@*
    作物類別、作物總面積與診斷次數圖表(直方圖)
*@
@model InformationSystem.ViewModel.ServiceAreaStatisticModel
@{
    Layout = null;
}

<div class="form-inline mt-2">
    作物種類：
    @Html.DropDownList("CropType", Model.CropTypeDdl, "請選擇", new { @class = "form-control", onchange = "OnCropTypeChange()" })
</div>

<canvas class="HiddenDom" id="CropTypeHiddenChart" width="1000" height="500"
        style="border:1px black solid"></canvas>

<div id="CropTypeStatArea" style="width: 1200px; height: 576px; position: relative; display: none">
    <button style="position: absolute; top: 20px; right: 20px;"
            type="button" class="btn btn-primary" onclick="CropTypeExport()">
        Excel
    </button>

    <canvas id="CropTypeCvs" width="1200" height="576"></canvas>
</div>

<form id="CropTypeExportForm" method="post" action="/StatisticApi/ExportCropsTypeEachYearStat">
    <input id="ExportCropsType" name="cropsType" type="hidden" />
</form>

<script>

    /**
    * 匯出Excel
    */
    function CropTypeExport() {
        document.querySelector("#ExportCropsType").value = document.querySelector("#CropType").value;
        document.querySelector("#CropTypeExportForm").submit();
    }
</script>

<script>

    /**
    * 產生各年度作物報表
    */
    class CropsTypeEachYear {

        static cropTypeCvs = new CanvasS("#CropTypeCvs");
        static backgroundColor = "azure";

        static chartOptions = {
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        color: "black",
                        font: {
                            size: 40,
                            weight: "bold",
                            family: "Microsoft JhengHei"
                        },

                    }
                },
                x: {
                    display: false
                }
            },
            plugins: {
                legend: {
                    display: false
                }
            }
        };

        
        /**
        * 繪製報表
        */
        static Draw() {

            CropsTypeEachYear.cropTypeCvs.BackgroundColor = CropsTypeEachYear.backgroundColor;

            CropsTypeEachYear.ApiGetStatData().then(statData => {

                //圖例
                CropsTypeEachYear.DrawLegend();

                //表格
                CropsTypeEachYear.DrawTable(statData);

                //畫直方圖
                CropsTypeEachYear.DrawChart(150, 80, 600, 300, statData);

            });

        }

        /**
         * 畫圖例
         */
        static DrawLegend() {

            let cvs = CropsTypeEachYear.cropTypeCvs;

            //圖例外框
            cvs.Context2D.setLineDash([5]); //使用虛線
            cvs.DrawRoundRect(800, 200, 300, 200, 20);
            cvs.Context2D.setLineDash([]); //改回實線

            //圖例Icon
            cvs.FillImage(1010, 225, 70, 70, "/img/輔導農友人次Icon.png");
            cvs.FillImage(1010, 310, 70, 70, "/img/輔導面積Icon.png");

            //圖例文字
            cvs.FillMultiText(815, 265, [
                new CanvasText("█", "25px Microsoft JhengHei", "orange"),
                new CanvasText("輔導農友人次", "bold 28px Microsoft JhengHei")
            ])

            cvs.FillMultiText(815, 360, [
                new CanvasText("█", "25px Microsoft JhengHei", "gold"),
                new CanvasText("輔導面積", "bold 28px Microsoft JhengHei")
            ]);

        }

        /**
        * 將統計資料繪製成表格
        * @@param statData 統計資料
        */
        static DrawTable(statData) {

            let allCropData = CropsTypeEachYear.ConvertToTableFormat(statData);
            let allCropCt = new CanvasTable(CropsTypeEachYear.cropTypeCvs.Context2D, allCropData);
            //手動設定邊界距離
            allCropCt.SetCellPadding(5, 5, 5, 5);
            //手動設定欄寬
            let dataSetWidth = 111;
            allCropCt.ColumnWidth[1] = dataSetWidth;
            allCropCt.ColumnWidth[2] = dataSetWidth;
            allCropCt.ColumnWidth[3] = dataSetWidth;
            allCropCt.ColumnWidth[4] = dataSetWidth;
            allCropCt.ColumnWidth[5] = dataSetWidth;
            allCropCt.SkipLeftTop = true;

            //畫表
            allCropCt.RenderTable(30, 380);
        }

        /**
        * 將統計資料繪製成圖表
        */
        static DrawChart(x, y, width, height, statData) {

            const chartData = {
                labels: statData.map(data => `${data.Year - 1911}年`),
                datasets: [
                    {
                        label: '輔導人次',
                        data: statData.map(data => data.TotalCount),
                        borderWidth: 1,
                        backgroundColor: "orange"
                    },
                    {
                        label: '輔導面積',
                        data: statData.map(data => data.TotalArea),
                        borderWidth: 1,
                        backgroundColor: "gold"
                    }]
            };


            let chart = new PromiseChart("CropTypeHiddenChart", "bar", chartData, CropsTypeEachYear.chartOptions);
            chart.Render().then(() => {
                CropsTypeEachYear.cropTypeCvs.DrawCanvas(x, y, width, height, chart.Dom);
                chart.Destroy();
            });
        }

        /**
        * 將統計資料轉成繪製表格用的格式
        * @@param statData 統計資料
        * @@returns {Cell[][]} 繪製表格用的格式
        */
        static ConvertToTableFormat(statData) {

            let colYear = [new Cell()];

            let colTotalCount = [new Cell([
                new CanvasText("█", "20px Microsoft JhengHei", "orange"),
                new CanvasText("輔導人次", "bold 20px Microsoft JhengHei")
            ])];

            let colTotalArea = [new Cell([
                new CanvasText("█", "20px Microsoft JhengHei", "gold"),
                new CanvasText("輔導面積(公頃)", "bold 20px Microsoft JhengHei"),
            ])];


            statData.forEach(x => {
                colYear.push(new Cell(new CanvasText(`${x.Year - 1911}年`, "bold 22px Microsoft JhengHei"), AnchorType.Middle));
                colTotalCount.push(new Cell(new CanvasText(x.TotalCount, "20px Microsoft JhengHei"), AnchorType.Middle));
                colTotalArea.push(new Cell(new CanvasText(x.TotalArea, "20px Microsoft JhengHei"), AnchorType.Middle));
            });

            return [colYear, colTotalCount, colTotalArea];
        }

        /**
         * 取得統計資料
         */
        static ApiGetStatData() {

            let url = `/StatisticApi/GetCropsTypeEachYearStat`;

            let headers = {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }

            let body = {
                cropsType: document.querySelector("#CropType").value
            }

            return fetch(url, {
                method: "POST",
                headers: headers,
                body: JSON.stringify(body)
            }).then(response => response.json());
        }


    }

</script>

<script>

    function OnCropTypeChange() {
        let selectedCropType = $("#CropType").val();
        if (selectedCropType) {
            $("#CropTypeStatArea").show();
            CropsTypeEachYear.Draw();
        } else {
            $("#CropTypeStatArea").hide();
        }
    }

</script>